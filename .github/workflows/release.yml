name: release

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_tag:
        description: "version of the release"
        required: true
        type: string

jobs:
  build-binaries:
    name: build binaries
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up qemu
        uses: docker/setup-qemu-action@v3
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3
      # - name: build binaries using buildx
      #   uses: docker/build-push-action@v5
      #   with:
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     outputs: type=local,dest=$GITHUB_WORKSPACE
      #     platform: linux/amd64,linux/arm64
      #     push: false
      #     target: binary
      - name: build binaries using buildx
        run: docker buildx build --platform linux/arm64,linux/amd64 --target binary --output type=local,dest=$GITHUB_WORKSPACE .
      - name: move files around
        run: |
          ls -lha $GITHUB_WORKSPACE/*
          mv $GITHUB_WORKSPACE/linux_amd64/git-metric $GITHUB_WORKSPACE/git-metrics_linux-x86_64
          mv $GITHUB_WORKSPACE/linux_arm64/git-metric $GITHUB_WORKSPACE/git-metrics_linux-aarch64

      - name: set git user
        uses: ./.github/actions/git-user

      - name: make binary executable
        run: chmod +x $GITHUB_WORKSPACE/git-metrics_linux-x86_64

      - name: add metrics
        run: |
          $GITHUB_WORKSPACE/git-metrics_linux-x86_64 add binary-size \
              --tag "build.target: x86_64-unknown-linux-gnu" \
              --tag "platform.os: linux" \
              --tag "platform.arch: x86_64" \
              --tag "unit: byte" \
              $(stat --printf="%s" $GITHUB_WORKSPACE/git-metrics_linux-x86_64)
          $GITHUB_WORKSPACE/git-metrics_linux-x86_64 add binary-size \
              --tag "build.target: aarch64-unknown-linux-gnu" \
              --tag "platform.os: linux" \
              --tag "platform.arch: aarch64" \
              --tag "unit: byte" \
              $(stat --printf="%s" $GITHUB_WORKSPACE/git-metrics_linux-aarch64)
      - name: push metrics
        run: $GITHUB_WORKSPACE/git-metrics_linux-x86_64 push
        env:
          GIT_BACKEND: command

  # build-binary:
  #   name: build binary
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #     - name: build binary
  #       run: cargo build --release

  #     - name: set git user
  #       uses: ./.github/actions/git-user

  #     - name: fetch remote metrics
  #       run: ./target/release/git-metrics pull
  #     - name: add metrics
  #       run: |
  #         ./target/release/git-metrics add binary-size \
  #             --tag "rustc.version: $(rustc --version)" \
  #             --tag "build.target: x86_64-unknown-linux-gnu" \
  #             --tag "platform.os: linux" \
  #             --tag "platform.arch: x86_64" \
  #             --tag "unit: byte" \
  #             $(stat --printf="%s" ./target/release/git-metrics)
  #     - name: push metrics
  #       run: ./target/release/git-metrics push
  #       env:
  #         GIT_BACKEND: command

  #     - name: move the binaries
  #       run: cp target/release/git-metrics git-metrics_linux-x86_64

  #     - name: get release id from tag
  #       if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' }}
  #       id: release_id
  #       run: |
  #         release_id=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/${{ inputs.release_tag }} | jq .id)
  #         echo "release_id=$release_id" >> $GITHUB_OUTPUT
  #     - name: upload the artifacts
  #       if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' }}
  #       uses: skx/github-action-publish-binaries@release-2.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         releaseId: ${{ steps.release_id.outputs.release_id }}
  #         args: "git-metrics_*"
