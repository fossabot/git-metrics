name: release

on:
  pull_request:
    paths:
      - ".github/workflows/release.yml"
      - "rust-toolchain.toml"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "**.rs"

  push:
    branches:
      - main
    paths:
      - ".github/workflows/release.yml"
      - "rust-toolchain.toml"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "**.rs"

jobs:
  build-binaries:
    name: build binaries

    strategy:
      fail-fast: false
      matrix:
        build:
          # - platform: windows-latest
          #   target: aarch64-pc-windows-msvc
          #   generate: git-metrics.exe
          #   filename: git-metrics_win-aarch64.exe
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            generate: git-metrics.exe
            filename: git-metrics_win-x86_64.exe

          # - platform: macos-latest
          #   target: aarch64-apple-darwin
          #   generate: git-metrics
          #   filename: git-metrics_darwin-aarch64
          - platform: macos-latest
            target: x86_64-apple-darwin
            generate: git-metrics
            filename: git-metrics_darwin-x86_64

          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            generate: git-metrics
            filename: git-metrics_linux-x86_64

    runs-on: ${{ matrix.build.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.build.target }}
      - name: install openssl on macos
        if: ${{ matrix.build.platform == 'macos-latest' }}
        run: brew install openssl
      - name: build binary
        run: cargo build --release --target ${{ matrix.build.target }}
      - name: strip binary
        run: strip target/${{ matrix.build.target }}/release/${{ matrix.build.generate }}
      - name: rename binary
        run: mv target/${{ matrix.build.target }}/release/${{ matrix.build.generate }} ./${{ matrix.build.filename }}
      - uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.build.target }}
          path: ${{ matrix.build.filename }}
          if-no-files-found: error
