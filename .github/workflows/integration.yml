name: integration testing

on:
  # note that HEAD for pull requests represents the merge commit
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: build binary
        run: cargo build --release
      - name: save compiled binary
        uses: actions/upload-artifact@master
        with:
          name: git-metrics-binary
          path: target/release/git-metrics

  with-git2-push-metrics:
    runs-on: ubuntu-latest
    needs:
      - build-binary
    steps:
      - uses: actions/checkout@v3
      - name: fetch compiled binary
        uses: actions/download-artifact@master
        with:
          name: git-metrics-binary
          path: target/release
      - name: make binary executable
        run: chmod +x target/release/git-metrics

      - name: set git user
        uses: ./.github/actions/git-user

      - name: fetch remote metrics
        run: ./target/release/git-metrics --backend git2 pull

      - name: add metric
        run: ./target/release/git-metrics --backend git2 add with-git2 1.0

      - name: push metrics
        run: ./target/release/git-metrics -vvvvv push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_BACKEND: git2

  with-git2-pull-metrics:
    runs-on: ubuntu-latest
    needs:
      - build-binary
      - with-git2-push-metrics
    steps:
      - uses: actions/checkout@v3
      - name: fetch compiled binary
        uses: actions/download-artifact@master
        with:
          name: git-metrics-binary
          path: target/release
      - name: make binary executable
        run: chmod +x target/release/git-metrics

      - name: set git user
        uses: ./.github/actions/git-user

      - name: fetch remote metrics
        run: ./target/release/git-metrics --backend git2 pull

      - name: check metric presence
        run: if [ ! -z "$(./target/release/git-metrics --backend git2 show | grep with-git2)" ]; then exit 1; fi

  with-cmd-push-metrics:
    runs-on: ubuntu-latest
    needs:
      - build-binary
      # in order to avoid conflicts
      - with-git2-pull-metrics
    steps:
      - uses: actions/checkout@v3
      - name: fetch compiled binary
        uses: actions/download-artifact@master
        with:
          name: git-metrics-binary
          path: target/release
      - name: make binary executable
        run: chmod +x target/release/git-metrics

      - name: set git user
        uses: ./.github/actions/git-user

      - name: fetch remote metrics
        run: ./target/release/git-metrics --backend command pull

      - name: add metric
        run: ./target/release/git-metrics --backend command add with-command 1.0

      - name: add metric
        run: |
          ./target/release/git-metrics -vvvvv add \
            binary-size \
            --tag "unit: byte" \
            --tag "platform.arch: $RUNNER_ARCH" \
            --tag "platform.os: $RUNNER_OS" \
            --tag "rust.version: stable" \
            $(stat --printf="%s" target/release/git-metrics)
        env:
          GIT_BACKEND: command

      - name: check metrics exist
        run: if [ -z "$(./target/release/git-metrics -vvvvv show | grep with-command)" ]; then exit 1; fi
        env:
          GIT_BACKEND: command

      - name: push metrics
        run: ./target/release/git-metrics -vvvvv push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_BACKEND: command

  with-cmd-pull-metrics:
    runs-on: ubuntu-latest
    needs:
      - build-binary
      - with-cmd-push-metrics
    steps:
      - uses: actions/checkout@v3
      - name: fetch compiled binary
        uses: actions/download-artifact@master
        with:
          name: git-metrics-binary
          path: target/release
      - name: make binary executable
        run: chmod +x target/release/git-metrics

      - name: set git user
        uses: ./.github/actions/git-user

      - name: fetch remote metrics
        run: target/release/git-metrics --backend command pull

      - name: check metrics exist
        run: if [ -z "$(./target/release/git-metrics -vvvvv show | grep with-command)" ]; then exit 1; fi
        env:
          GIT_BACKEND: command
